package leetcodePratice;

import java.util.ArrayList;

public class exercise11_LeetCode557_Reverse_Words_III {

	/*
	 	Given a string, you need to reverse the order of characters in each word within a sentence while still preserving whitespace and initial word order.
		Example 1:
			Input: "Let's take LeetCode contest"
			Output: "s'teL ekat edoCteeL tsetnoc"
		Note: In the string, each word is separated by single space and there will not be any extra space in the string.
	 */
	
	public static String reverseWordsFunction(String str) {
		String ans="";
		String[] arrayString = str.split("");
		
		ArrayList<String> list = new ArrayList<String>();
		
		StringBuilder sb = new StringBuilder();
		for(String alphabet:arrayString) {	
			sb.append(alphabet);			
			if(alphabet.equals(" ")) {
				list.add(sb.toString());
				sb.delete(0, sb.length());
			}
		}
		
		StringBuilder answerSb = new StringBuilder();
		for(int i=0;i<list.size();i++) {
			String[] theListArray = list.get(i).split("");
			for(int j=theListArray.length-1-1;0<j;j--) {	
				answerSb.append(theListArray[j]);
			}
			answerSb.append("");
			ans+=answerSb.toString();
		}
		
		return ans;
	}
	
	
	public static void main(String[] args) {
		String str="Let's take LeetCode contest";
		String ans = reverseWordsFunction(str);
		System.out.println(ans);
			
	}

}
