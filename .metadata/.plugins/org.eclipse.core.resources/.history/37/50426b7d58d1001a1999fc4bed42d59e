package leetcodePratice;

import java.util.HashMap;

public class exercise19_LeetCode136_Single_Number {

	/*
	 	Given a non-empty array of integers, every element appears twice except for one. Find that single one.

		Note:
			Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?
		
		Example 1:
			Input: [2,2,1]
			Output: 1
			
		Example 2:
			Input: [4,1,2,1,2]
			Output: 4
	 */
	
	//	方法一
	static int singleNumberFunction(int[] nums) {
		int singleNumber=0;
		
		for(int i=0;i<nums.length;i++) {
			for(int j=i+1;j<nums.length;j++) {
				if(nums[i]==nums[j]) {
					singleNumber=nums[i];
					break;
				}
			}
			
		}
		
		return singleNumber;
	}
	
	
	public static void main(String[] args) {
		int[] nums= {4,1,2,1,2};
		int ans = singleNumberFunction(nums);
		System.out.println(ans);
		
	}

}
