package leetcodePratice;

public class exercise8_LeetCode53_Maximum_Subarray {

	/*
	 * Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.
	 * Example:
			Input: [-2,1,-3,4,-1,2,1,-5,4],
			Output: 6
			Explanation: [4,-1,2,1] has the largest sum = 6.
	 */
	
	
	/**
	 * 
	 * @param array
	 * @return integer
	 */
	public static int maximumSubarray(int[] array) {
		
		if(array==null||array.length==0) {
			return 0;
		}
		
		int maxnum=0;
		int res=array[0];
		
		for(int i=0;i<array.length;i++) {
			
			maxnum=Math.max(maxnum+array[i], array[i]);
			
			res=Math.max(res, maxnum);
			
		}
		
		
		
		return res;
	}
	
	
	public static void main(String[] args) {
		int[] array= {-2,1,-3};
		System.out.println(maximumSubarray(array));

	}

}
