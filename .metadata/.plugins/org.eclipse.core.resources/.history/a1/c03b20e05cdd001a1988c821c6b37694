package leetcodePratice;

import java.util.HashMap;

public class exercise32_LeetCode20_Valid_Parentheses {

	/*
	 	Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

		An input string is valid if:
		
		Open brackets must be closed by the same type of brackets.
		Open brackets must be closed in the correct order.
		Note that an empty string is also considered valid.
		
		Example 1:
				Input: "()"
				Output: true
				
		Example 2:
				Input: "()[]{}"
				Output: true
				
		Example 3:
				Input: "(]"
				Output: false
				
		Example 4:
				Input: "([)]"
				Output: false
				
		Example 5:
				Input: "{[]}"
				Output: true
	 */
	
	public boolean isValid(String s) {
		HashMap<String, String> map = new HashMap<String,String>();
		map.put("(",")");
		map.put("{","}");
		map.put("[","]");
		
		if(s.length()%2!=0||s==null||s.length()==0) {
			
		}
		
		for(int i=0;i<s.length();i++) {
			
			
			
		}
		
		
		
		
		
		return true;
    }
	
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
