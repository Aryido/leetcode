package leetcodePratice;


import java.util.Iterator;
import java.util.TreeSet;

public class exercise349_LeetCode349_Intersection_Of_Two_Array {

	/*
		Given two arrays, write a function to compute their intersection.

		Example:
			Given nums1 = [1, 2, 2, 1], nums2 = [2, 2], return [2].
		
		Note:
			Each element in the result must be unique.
			The result can be in any order.
	 */
	
	public static int[] intersection(int[] nums1, int[] nums2) {
		TreeSet<Integer> set = new TreeSet<Integer>();
		for(int i=0;i<nums1.length;i++) {
			for(int j=0;j<nums2.length;j++) {
				if(nums1[i]==nums2[j]) {
					set.add(nums1[i]);
				}
			}
		}
		
		int[] ans= new int[set.size()];
		int count=0;
		for(Integer s:set) {
			ans[count]=s;
			count++;
		}
		
		return nums1;
    }
	
	
	
	public static void main(String[] args) {
		 
	}

}
