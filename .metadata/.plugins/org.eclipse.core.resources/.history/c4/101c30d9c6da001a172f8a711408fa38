package leetcodePratice;

public class exercise28_LeetCode83_Remove_Duplicate_From_Sort_List {

	/*
	 * Given a sorted linked list, delete all duplicates such that each element
	 * appear only once.
	 * 
	 * For example, Given 1->1->2, return 1->2. Given 1->1->2->3->3, return 1->2->3.
	 */

	public class ListNode {
		int val;
		ListNode next;

		ListNode() {
		}

		ListNode(int val) {
			this.val = val;
		}

		ListNode(int val, ListNode next) {
			this.val = val;
			this.next = next;
		}
	}
	//LEETCODE
	public static ListNode deleteDuplicates(ListNode head) {
		ListNode current = head;
	    while (current != null && current.next != null) {
	        if (current.next.val == current.val) {
	            current.next = current.next.next;
	        } else {
	            current = current.next;
	        }
	    }
	    return head;
	}

	public static void main(String[] args) {
		
		ListNode next5 = new ListNode(3);
		ListNode next4 = new ListNode(3,next5);
		ListNode next3 = new ListNode(2,next4);
		ListNode next2 = new ListNode(2,next3);
		ListNode next1 = new ListNode(1,next2);
		ListNode head = new ListNode(1,next1);

	}

}
